{"ast":null,"code":"var _jsxFileName = \"/home/dineshubuntu/project/Address-Book/frontend/src/editContact.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { FaCheck, FaTimes, FaUpload } from 'react-icons/fa';\n\nclass EditContact extends React.Component {\n  render() {\n    return React.createElement(Card, {\n      style: {\n        width: '450px',\n        height: 'auto',\n        borderRadius: '6px'\n      },\n      id: \"editCardId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(EditCardForm, {\n      name: this.props.name,\n      phno: this.props.phno,\n      email: this.props.email,\n      image: this.props.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nclass EditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileToUpdate: null,\n      filePreview: null,\n      fields: {\n        name: this.props.name,\n        phno: this.props.phno,\n        email: this.props.email\n      },\n      errors: {\n        name: \"\",\n        phno: \"\",\n        email: \"\"\n      }\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /*componentDidMount()\n  {\n      const {name,phno,email}=this.props;\n      document.getElementById(\"name\").value=name;\n      document.getElementById(\"phno\").value=phno;\n      document.getElementById(\"email\").value=email;\n  } */\n  handleChange(event) {\n    let fields = this.state.fields;\n    const nameReg = /^[A-Za-z ]{1,25}$/;\n    const phnoReg = /^[0-9]{1,10}$/;\n\n    if (event.target.name === \"name\") {\n      if (event.target.value === '' || nameReg.test(event.target.value)) {\n        fields[event.target.name] = event.target.value;\n      }\n    }\n\n    if (event.target.name === \"phno\") {\n      if (event.target.value === '' || phnoReg.test(event.target.value)) {\n        fields[event.target.name] = event.target.value;\n      }\n    }\n\n    if (event.target.name === \"email\") {\n      fields[event.target.name] = event.target.value;\n    }\n\n    this.setState({\n      fields\n    });\n    event.preventDefault();\n  }\n\n  handleCancel(event) {\n    event.preventDefault(); //document.getElementById(\"editCardId\").style.display=\"none\";\n\n    window.location.replace(\"/\"); //ReactDOM.render(<App/>,document.getElementById('root'));\n  }\n\n  handleSave(event) {\n    event.preventDefault(); //console.log(\"Display value:\",this.props)\n\n    if (this.validateEditContactForm()) {\n      console.log(\"Original Values:\", this.props);\n      console.log(\"Edited Values:\", this.state.fields, this.state.fileToUpdate);\n      let fields = this.state.fields;\n      const fd = new FormData();\n      fd.append(\"file\", this.state.fileToUpdate);\n      fd.append(\"name\", fields[\"name\"]);\n      fd.append(\"phno\", fields[\"phno\"]);\n      fd.append(\"email\", fields[\"email\"]);\n      fd.append(\"previousName\", this.props.name);\n      fd.append(\"previousPhno\", this.props.phno);\n      fd.append(\"previousEmail\", this.props.email);\n      fd.append(\"previousImage\", this.props.image); //console.log(\"update picture:\",fd.get(\"file\"));\n\n      axios.post('http://localhost:7000/updateContact', fd, {}).then(res => {\n        if (res.data.success) {\n          alert(\"Contact updated successfully\");\n          window.location.replace(\"/\");\n        } else {\n          alert(\"Contact update failed\");\n          window.location.replace(\"/\");\n        }\n      });\n    }\n  }\n\n  validateEditContactForm() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Please provide contact name\";\n    }\n\n    if (!fields[\"phno\"]) {\n      formIsValid = false;\n      errors[\"phno\"] = \"Please provide contact number\";\n    }\n\n    if (typeof fields[\"phno\"] !== \"undefined\") {\n      if (!/^[0-9]{10}$/.test(fields[\"phno\"])) {\n        formIsValid = false;\n        errors[\"phno\"] = \"Please provide valid contact number\"; //fields[\"phno\"]=\"\";\n      }\n    }\n    /*if(typeof fields[\"email\"]!==\"undefined\")\n    {\n        if(!fields[\"email\"].match(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+.([A-Za-z]{2,4})$/))\n        {\n            formIsValid=false;\n            errors[\"email\"]=\"Please provide valid email id or leave it empty\";\n            //fields[\"email\"]=\"\";\n        }\n    }*/\n\n\n    this.setState({\n      errors\n    });\n    return formIsValid;\n  }\n\n  updateImage(event) {\n    this.setState({\n      fileToUpdate: event.target.files[0]\n    }, () => {\n      console.log(\"File to update:\", this.state.fileToUpdate);\n    });\n    this.setState({\n      filePreview: URL.createObjectURL(event.target.files[0])\n    }, () => {\n      console.log(\"File to update preview:\", this.state.filePreview);\n      document.getElementById(\"image\").src = this.state.filePreview;\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSave,\n      onReset: this.handleCancel,\n      noValidate: true,\n      encType: \"multipart/form-data\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      id: \"image\",\n      src: this.props.image || \"user1.png\",\n      className: \"avatar-background\",\n      alt: \"default image\",\n      title: \"Display Picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"btn btn-primary btn-block button\",\n      htmlFor: \"update\",\n      title: \"Change Picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      id: \"update\",\n      name: \"update\",\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"d-none\",\n      onChange: this.updateImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(FaUpload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"\\xA0Change Picture\")), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter Name\",\n      className: \"styled-control\",\n      value: this.state.fields.name,\n      onChange: this.handleChange,\n      title: \"Contact Name\",\n      maxLength: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      className: \"error-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.errors.name)), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"phno\",\n      placeholder: \"Enter Phone No\",\n      className: \"styled-control\",\n      value: this.state.fields.phno,\n      onChange: this.handleChange,\n      maxLength: \"10\",\n      title: \"Contact Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      className: \"error-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.errors.phno)), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter Email\",\n      className: \"styled-control\",\n      value: this.state.fields.email,\n      onChange: this.handleChange,\n      title: \"Contact Email ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      className: \"error-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(Button, {\n      variant: \"primary\",\n      className: \"button\",\n      type: \"reset\",\n      style: {\n        float: 'left'\n      },\n      title: \"Cancel Changes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(FaTimes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \"\\xA0Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      className: \"button\",\n      type: \"submit\",\n      style: {\n        float: 'right'\n      },\n      title: \"Save Changes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FaCheck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"\\xA0Save\"));\n  }\n\n}\n\n;\nexport default EditContact;","map":{"version":3,"sources":["/home/dineshubuntu/project/Address-Book/frontend/src/editContact.js"],"names":["React","axios","Card","Form","Button","FaCheck","FaTimes","FaUpload","EditContact","Component","render","width","height","borderRadius","props","name","phno","email","image","EditCardForm","constructor","state","fileToUpdate","filePreview","fields","errors","handleCancel","bind","handleSave","updateImage","handleChange","event","nameReg","phnoReg","target","value","test","setState","preventDefault","window","location","replace","validateEditContactForm","console","log","fd","FormData","append","post","then","res","data","success","alert","formIsValid","files","URL","createObjectURL","document","getElementById","src","float"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {Card,Form,Button} from 'react-bootstrap';\nimport {FaCheck,FaTimes,FaUpload} from 'react-icons/fa'\n\nclass EditContact extends React.Component {\n    render() {\n    return (\n        <Card style={{ width: '450px' , height: 'auto',borderRadius:'6px'}} id=\"editCardId\">\n        <Card.Body>\n                <EditCardForm name={this.props.name} phno={this.props.phno} email={this.props.email} image={this.props.image}/>\n        </Card.Body>\n    </Card>\n    )}\n};\n\nclass EditCardForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={fileToUpdate:null,filePreview:null,\n            fields:{name:this.props.name,phno:this.props.phno,email:this.props.email},\n            errors:{name:\"\",phno:\"\",email:\"\"}\n        };\n        this.handleCancel=this.handleCancel.bind(this);\n        this.handleSave=this.handleSave.bind(this);\n        this.updateImage=this.updateImage.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n    };\n    /*componentDidMount()\n    {\n        const {name,phno,email}=this.props;\n        document.getElementById(\"name\").value=name;\n        document.getElementById(\"phno\").value=phno;\n        document.getElementById(\"email\").value=email;\n    } */\n    handleChange(event){\n        let fields=this.state.fields;\n        const nameReg=/^[A-Za-z ]{1,25}$/;\n        const phnoReg=/^[0-9]{1,10}$/;\n        if(event.target.name===\"name\")\n        {\n            if(event.target.value==='' || nameReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"phno\")\n        {\n            if(event.target.value==='' || phnoReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"email\")\n        {\n            fields[event.target.name]=event.target.value;\n        }\n        \n        this.setState({fields});\n        event.preventDefault();\n    };\n\n    handleCancel(event){\n        event.preventDefault();\n        //document.getElementById(\"editCardId\").style.display=\"none\";\n       window.location.replace(\"/\");\n        //ReactDOM.render(<App/>,document.getElementById('root'));\n    };\n\n    handleSave(event){\n        event.preventDefault();\n        //console.log(\"Display value:\",this.props)\n        if(this.validateEditContactForm())\n        {\n            console.log(\"Original Values:\",this.props);\n            console.log(\"Edited Values:\",this.state.fields,this.state.fileToUpdate);\n            let fields=this.state.fields;\n            const fd=new FormData();\n            fd.append(\"file\",this.state.fileToUpdate);\n            fd.append(\"name\",fields[\"name\"]);\n            fd.append(\"phno\",fields[\"phno\"]);\n            fd.append(\"email\",fields[\"email\"]);\n            fd.append(\"previousName\",this.props.name);\n            fd.append(\"previousPhno\",this.props.phno);\n            fd.append(\"previousEmail\",this.props.email);\n            fd.append(\"previousImage\",this.props.image);\n            //console.log(\"update picture:\",fd.get(\"file\"));\n            axios.post('http://localhost:7000/updateContact',fd,{})\n            .then((res)=>{\n                if(res.data.success)\n                {\n                    alert(\"Contact updated successfully\");\n                    window.location.replace(\"/\");\n                }\n                else{\n                    alert(\"Contact update failed\");\n                    window.location.replace(\"/\");\n                }\n            })\n        }\n    };\n\n    validateEditContactForm(){\n        let fields=this.state.fields;\n        let errors={};\n        let formIsValid=true;\n        if(!fields[\"name\"])\n        {\n            formIsValid=false;\n            errors[\"name\"]=\"Please provide contact name\";\n        }\n        if(!fields[\"phno\"])\n        {\n            formIsValid=false;\n            errors[\"phno\"]=\"Please provide contact number\";\n        }\n        if(typeof fields[\"phno\"]!==\"undefined\")\n        {\n            if(!/^[0-9]{10}$/.test(fields[\"phno\"]))\n            {\n                formIsValid=false;\n                errors[\"phno\"]=\"Please provide valid contact number\";\n                //fields[\"phno\"]=\"\";\n            }\n        }\n        /*if(typeof fields[\"email\"]!==\"undefined\")\n        {\n            if(!fields[\"email\"].match(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+.([A-Za-z]{2,4})$/))\n            {\n                formIsValid=false;\n                errors[\"email\"]=\"Please provide valid email id or leave it empty\";\n                //fields[\"email\"]=\"\";\n            }\n        }*/\n        this.setState({errors});\n        return formIsValid;\n    };\n\n    updateImage(event){\n        this.setState({fileToUpdate:event.target.files[0]},()=>{\n            console.log(\"File to update:\",this.state.fileToUpdate);\n        })\n        this.setState({filePreview:URL.createObjectURL(event.target.files[0])},()=>{\n            console.log(\"File to update preview:\",this.state.filePreview);\n            document.getElementById(\"image\").src=this.state.filePreview;\n        })\n    };\n\n    render(){\n    return (\n        <Form onSubmit={this.handleSave} onReset={this.handleCancel} noValidate encType=\"multipart/form-data\" autoComplete=\"off\">\n            <Form.Group>\n        <Card >\n            <Card.Img variant=\"top\" id=\"image\" src= {this.props.image || \"user1.png\"} className=\"avatar-background\" alt=\"default image\" title=\"Display Picture\"/>\n        </Card>\n        </Form.Group>\n       {/* <Card.ImgOverlay className=\"align-center text-center\"> */}\n            <Form.Group>\n               <Form.Label className=\"btn btn-primary btn-block button\" htmlFor=\"update\" title=\"Change Picture\"> \n                    <Form.Control id=\"update\" name=\"update\" type=\"file\" accept=\"image/*\" className=\"d-none\" onChange={this.updateImage}/><FaUpload/>&nbsp;Change Picture\n                    </Form.Label>\n            </Form.Group>\n            <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter Name\" className=\"styled-control\" value={this.state.fields.name}  onChange={this.handleChange} title=\"Contact Name\" maxLength=\"25\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.name}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control type=\"text\" name=\"phno\" placeholder=\"Enter Phone No\" className=\"styled-control\" value={this.state.fields.phno} onChange={this.handleChange} maxLength=\"10\" title=\"Contact Number\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.phno}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter Email\" className=\"styled-control\" value={this.state.fields.email} onChange={this.handleChange} title=\"Contact Email ID\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.email}</Form.Label>\n        </Form.Group>\n        <Button variant=\"primary\" className=\"button\" type=\"reset\" style={{float:'left'}} title=\"Cancel Changes\"><FaTimes></FaTimes>&nbsp;Cancel</Button> \n        <Button variant=\"primary\" className=\"button\" type=\"submit\" style={{float:'right'}} title=\"Save Changes\"><FaCheck></FaCheck>&nbsp;Save</Button> \n        \n    </Form>\n    )}\n};\n\nexport default EditContact;"]},"metadata":{},"sourceType":"module"}