{"ast":null,"code":"import _classCallCheck from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/dineshubuntu/project/Address-Book/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';import ViewContact from'./viewContact';import{ListGroup,Image,Form,Row,Col}from'react-bootstrap';import axios from'axios';var ContactList=/*#__PURE__*/function(_React$Component){_inherits(ContactList,_React$Component);function ContactList(props){var _this;_classCallCheck(this,ContactList);_this=_possibleConstructorReturn(this,_getPrototypeOf(ContactList).call(this,props));_this.state={data:[],items:[],noResult:\"\",totalContacts:0,noContacts:\"\"};_this.searchHandler=_this.searchHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(ContactList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('http://localhost:7000/contactList').then(function(res){res.data.data.sort(function(a,b){return(a.name>b.name)-(a.name<b.name);});_this2.setState({data:res.data.data});_this2.setState({items:_this2.state.data});_this2.setState({totalContacts:res.data.data.length});if(_this2.state.data.length===0){_this2.setState({noContacts:\"No contacts to show\"});}console.log(\"items:\",_this2.state.items);});}},{key:\"searchHandler\",value:function searchHandler(event){var searchResult=this.state.data;//console.log(\"Search Result:\",searchResult);\nsearchResult=searchResult.filter(function(item){return item.name.toLowerCase().search(event.target.value.toLowerCase())!==-1;});if(searchResult.length===0){this.setState({noResult:\"No results found\"});}else{this.setState({noResult:\"\"});}this.setState({items:searchResult});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{style:{position:'relative'}},React.createElement(Form.Group,{as:Row,id:\"search\"},React.createElement(Col,{md:4},React.createElement(\"span\",null,\"Total: \",this.state.totalContacts+\" contacts\")),React.createElement(Col,{md:8},React.createElement(Form.Control,{type:\"text\",placeholder:\"Search Contact\",className:\"styledControl search-button\",title:\"Search Contact\",onChange:this.searchHandler}))),React.createElement(Form.Group,{as:Row},React.createElement(Col,{md:12},React.createElement(ListGroup,{variant:\"flush\",id:\"scrollable\"},this.state.items.map(function(user,index){return React.createElement(ListGroup.Item,{variant:\"primary\",action:true,className:\"borderless\",key:index,onClick:function onClick(event){ReactDOM.render(React.createElement(ViewContact,{name:user.name,phno:user.phno,email:user.email,image:user.image.replace('public/','http://localhost:7000/')}),document.getElementById('target'));console.log(\"Onclick:\",user.name,user.phno,user.email);}},React.createElement(Image,{src:user.image.replace('public/','http://localhost:7000/'),alt:\"user\",style:{borderRadius:'50%',width:'40px',height:'40px'}}),React.createElement(\"span\",null,user.name));})),React.createElement(\"span\",{className:\"align-center text-center\"},this.state.noResult),React.createElement(\"span\",{className:\"align-center text-center\"},this.state.noContacts))));}}]);return ContactList;}(React.Component);export default ContactList;","map":{"version":3,"sources":["/home/dineshubuntu/project/Address-Book/frontend/src/contactList.js"],"names":["React","ReactDOM","ViewContact","ListGroup","Image","Form","Row","Col","axios","ContactList","props","state","data","items","noResult","totalContacts","noContacts","searchHandler","bind","get","then","res","sort","a","b","name","setState","length","console","log","event","searchResult","filter","item","toLowerCase","search","target","value","position","map","user","index","render","phno","email","image","replace","document","getElementById","borderRadius","width","height","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewContact from './viewContact';\nimport {ListGroup,Image,Form,Row,Col} from 'react-bootstrap';\nimport axios from 'axios';\n\n\nclass ContactList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={data:[],items:[],noResult:\"\",totalContacts:0,noContacts:\"\"};\n        this.searchHandler=this.searchHandler.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:7000/contactList')\n          .then((res) => {res.data.data.sort(function(a,b){\n              return (a.name>b.name)-(a.name<b.name)\n          })\n              this.setState({ data: res.data.data});\n              this.setState({items:this.state.data});\n              this.setState({totalContacts:res.data.data.length});\n              if(this.state.data.length===0)\n              {\n                this.setState({noContacts:\"No contacts to show\"})\n              }\n          console.log(\"items:\",this.state.items)})\n      };\n      searchHandler(event){\n        var searchResult=this.state.data;\n        //console.log(\"Search Result:\",searchResult);\n        searchResult=searchResult.filter(function(item){\n            return item.name.toLowerCase().search(event.target.value.toLowerCase())!==-1;\n        })\n        if(searchResult.length===0)\n        {\n            this.setState({noResult:\"No results found\"})\n        }\n        else{\n            this.setState({noResult:\"\"})\n        }\n        this.setState({items:searchResult});\n      }\n    render() {\n    return (\n        <div style={{position:'relative'}} >\n            <Form.Group as={Row}  id=\"search\">\n                <Col md={4}><span>Total: {this.state.totalContacts+\" contacts\"}</span></Col>\n                <Col md={8}>\n                    <Form.Control type=\"text\" placeholder=\"Search Contact\" className=\"styledControl search-button\" title=\"Search Contact\" onChange={this.searchHandler}/>\n                </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n                <Col md={12}>\n                <ListGroup variant=\"flush\" id=\"scrollable\">{this.state.items.map((user,index)=>(\n                <ListGroup.Item variant=\"primary\" action className=\"borderless\" key={index} onClick={(event)=>{\n                ReactDOM.render(\n                <ViewContact name={user.name} phno={user.phno} email={user.email} image={user.image.replace('public/','http://localhost:7000/')}/>,document.getElementById('target'));\n                console.log(\"Onclick:\",user.name,user.phno,user.email)}}>\n                <Image src={user.image.replace('public/','http://localhost:7000/')} alt=\"user\" style={{borderRadius:'50%',width:'40px',height:'40px'}}></Image>\n                <span>{user.name}</span></ListGroup.Item>))}\n                </ListGroup>\n                <span className=\"align-center text-center\">{this.state.noResult}</span>\n                <span className=\"align-center text-center\">{this.state.noContacts}</span>\n                </Col>\n            </Form.Group>\n        </div>\n    );\n  }\n}\nexport default ContactList"]},"metadata":{},"sourceType":"module"}