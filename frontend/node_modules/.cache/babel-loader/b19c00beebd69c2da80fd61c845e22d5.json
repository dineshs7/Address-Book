{"ast":null,"code":"var _jsxFileName = \"/home/dineshubuntu/project/Address-Book/frontend/src/contactList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewContact from './viewContact';\nimport { ListGroup, Image, Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass ContactList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      items: [],\n      noResult: \"\",\n      totalContacts: 0,\n      noContacts: \"\"\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:7000/contactList').then(res => {\n      res.data.data.sort(function (a, b) {\n        return (a.name > b.name) - (a.name < b.name);\n      });\n      this.setState({\n        data: res.data.data\n      });\n      this.setState({\n        items: this.state.data\n      });\n      this.setState({\n        totalContacts: res.data.data.length\n      });\n\n      if (this.state.data.length === 0) {\n        this.setState({\n          noContacts: \"No contacts to show\"\n        });\n      }\n\n      console.log(\"items:\", this.state.items);\n    });\n  }\n\n  searchHandler(event) {\n    var searchResult = this.state.data; //console.log(\"Search Result:\",searchResult);\n\n    searchResult = searchResult.filter(function (item) {\n      return item.name.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n    });\n\n    if (searchResult.length === 0) {\n      this.setState({\n        noResult: \"No results found\"\n      });\n    } else {\n      this.setState({\n        noResult: \"\"\n      });\n    }\n\n    this.setState({\n      items: searchResult\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      id: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Total: \", this.state.totalContacts + \" contacts\")), React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search Contact\",\n      className: \"styledControl search-button\",\n      title: \"Search Contact\",\n      onChange: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      id: \"scrollable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.items.map((user, index) => React.createElement(ListGroup.Item, {\n      variant: \"primary\",\n      action: true,\n      className: \"borderless\",\n      key: index,\n      onClick: event => {\n        ReactDOM.render(React.createElement(ViewContact, {\n          name: user.name,\n          phno: user.phno,\n          email: user.email,\n          image: user.image.replace('public/', 'http://localhost:7000/'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), document.getElementById('target'));\n        console.log(\"Onclick:\", user.name, user.phno, user.email);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: user.image.replace('public/', 'http://localhost:7000/'),\n      alt: \"user\",\n      style: {\n        borderRadius: '50%',\n        width: '40px',\n        height: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, user.name)))), React.createElement(\"span\", {\n      className: \"align-center text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.noResult), React.createElement(\"span\", {\n      className: \"align-center text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.noContacts))));\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["/home/dineshubuntu/project/Address-Book/frontend/src/contactList.js"],"names":["React","ReactDOM","ViewContact","ListGroup","Image","Form","Row","Col","axios","ContactList","Component","constructor","props","state","data","items","noResult","totalContacts","noContacts","searchHandler","bind","componentDidMount","get","then","res","sort","a","b","name","setState","length","console","log","event","searchResult","filter","item","toLowerCase","search","target","value","render","position","map","user","index","phno","email","image","replace","document","getElementById","borderRadius","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewContact from './viewContact';\nimport {ListGroup,Image,Form,Row,Col} from 'react-bootstrap';\nimport axios from 'axios';\n\n\nclass ContactList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={data:[],items:[],noResult:\"\",totalContacts:0,noContacts:\"\"};\n        this.searchHandler=this.searchHandler.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:7000/contactList')\n          .then((res) => {res.data.data.sort(function(a,b){\n              return (a.name>b.name)-(a.name<b.name)\n          })\n              this.setState({ data: res.data.data});\n              this.setState({items:this.state.data});\n              this.setState({totalContacts:res.data.data.length});\n              if(this.state.data.length===0)\n              {\n                this.setState({noContacts:\"No contacts to show\"})\n              }\n          console.log(\"items:\",this.state.items)})\n      };\n      searchHandler(event){\n        var searchResult=this.state.data;\n        //console.log(\"Search Result:\",searchResult);\n        searchResult=searchResult.filter(function(item){\n            return item.name.toLowerCase().search(event.target.value.toLowerCase())!==-1;\n        })\n        if(searchResult.length===0)\n        {\n            this.setState({noResult:\"No results found\"})\n        }\n        else{\n            this.setState({noResult:\"\"})\n        }\n        this.setState({items:searchResult});\n      }\n    render() {\n    return (\n        <div style={{position:'relative'}} >\n            <Form.Group as={Row}  id=\"search\">\n                <Col md={4}><span>Total: {this.state.totalContacts+\" contacts\"}</span></Col>\n                <Col md={8}>\n                    <Form.Control type=\"text\" placeholder=\"Search Contact\" className=\"styledControl search-button\" title=\"Search Contact\" onChange={this.searchHandler}/>\n                </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n                <Col md={12}>\n                <ListGroup variant=\"flush\" id=\"scrollable\">{this.state.items.map((user,index)=>(\n                <ListGroup.Item variant=\"primary\" action className=\"borderless\" key={index} onClick={(event)=>{\n                ReactDOM.render(\n                <ViewContact name={user.name} phno={user.phno} email={user.email} image={user.image.replace('public/','http://localhost:7000/')}/>,document.getElementById('target'));\n                console.log(\"Onclick:\",user.name,user.phno,user.email)}}>\n                <Image src={user.image.replace('public/','http://localhost:7000/')} alt=\"user\" style={{borderRadius:'50%',width:'40px',height:'40px'}}></Image>\n                <span>{user.name}</span></ListGroup.Item>))}\n                </ListGroup>\n                <span className=\"align-center text-center\">{this.state.noResult}</span>\n                <span className=\"align-center text-center\">{this.state.noContacts}</span>\n                </Col>\n            </Form.Group>\n        </div>\n    );\n  }\n}\nexport default ContactList"]},"metadata":{},"sourceType":"module"}