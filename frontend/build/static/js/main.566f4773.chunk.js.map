{"version":3,"sources":["addContact.js","editContact.js","viewContact.js","contactList.js","App.js","Header.js","serviceWorker.js","index.js"],"names":["AddCardForm","props","state","fields","name","phno","email","errors","filePreview","fileToUpload","handleCancelAddContact","bind","handleSaveAddContact","handleChange","uploadImage","event","preventDefault","window","location","replace","this","target","value","test","setState","validateAddContactForm","formData","FormData","append","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","console","log","get","axios","post","then","res","data","success","alert","formIsValid","URL","createObjectURL","files","Form","onSubmit","onReset","noValidate","encType","autoComplete","Group","Card","Img","variant","src","className","alt","title","Label","htmlFor","id","type","accept","onChange","Control","placeholder","maxLength","Button","style","float","React","Component","AddContact","width","height","borderRadius","Body","EditContact","image","EditCardForm","fileToUpdate","handleCancel","handleSave","updateImage","validateEditContactForm","fd","document","getElementById","ViewContact","ViewCardForm","handleEdit","handleEditCancel","ReactDOM","render","ImgOverlay","color","plaintext","readOnly","ContactList","items","noResult","totalContacts","noContacts","searchHandler","sort","a","b","length","searchResult","filter","item","search","position","as","Row","Col","md","ListGroup","user","index","Item","action","key","onClick","Image","App","loading","Promise","resolve","setTimeout","Container","fluid","lg","xl","span","offset","AddButton","handleSubmit","size","NavBar","Navbar","bg","sticky","NavBarBrand","Brand","href","Header","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.566f4773.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {Card,Form,Button} from 'react-bootstrap';\nimport {FaCheck,FaTimes,FaUpload} from 'react-icons/fa'\n\nfunction AddContact() {\n    return (\n    <div>\n        <Card style={{ width: '450px' , height: 'auto',borderRadius:'6px'}} id=\"addCardId\">\n            <Card>\n                <Card.Body>\n                    <AddCardForm/>\n                </Card.Body>\n            </Card>\n        </Card>\n    </div>\n    )\n};\n\nclass AddCardForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={fields:{name:\"\",phno:\"\",email:\"\"},errors:{name:\"\",phno:\"\",email:\"\"},filePreview:null,fileToUpload:null};\n        this.handleCancelAddContact=this.handleCancelAddContact.bind(this);\n        this.handleSaveAddContact=this.handleSaveAddContact.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        this.uploadImage=this.uploadImage.bind(this)\n    };\n\n    handleCancelAddContact(event){\n       // document.getElementById(\"addCardId\").style.display=\"none\";\n       // document.getElementById(\"addBtn\").style.display=\"block\";\n        //alert(\"clicked addcontact cancel\");\n        event.preventDefault();\n        window.location.replace(\"/\");\n        //ReactDOM.render(<App/>,document.getElementById('root'));\n    };\n\n    handleChange(event){\n        let fields=this.state.fields;\n        const nameReg=/^[A-Za-z ]{1,25}$/;\n        const phnoReg=/^[0-9]{1,10}$/;\n        if(event.target.name===\"name\")\n        {\n            if(event.target.value==='' || nameReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"phno\")\n        {\n            if(event.target.value==='' || phnoReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"email\")\n        {\n            if(event.target.value==='' || typeof event.target.value==='undefined')\n            {\n                fields[event.target.name]=\"\";\n            }\n            else{\n                fields[event.target.name]=event.target.value;\n            }\n            \n        }\n        \n        this.setState({fields});\n        event.preventDefault();\n    };\n\n    handleSaveAddContact(event){\n        if(this.validateAddContactForm())\n        {\n            let fields=this.state.fields;\n            const formData=new FormData();\n            formData.append(\"file\",this.state.fileToUpload);\n            formData.append(\"name\",fields[\"name\"].toLowerCase().split(' ').map((s)=>s.charAt(0).toUpperCase()+s.substring(1)).join(' '));\n            formData.append(\"phno\",fields[\"phno\"]);\n            formData.append(\"email\",fields[\"email\"]);\n            console.log(\"all fields:\",this.state.fields,this.state.fileToUpload,formData.get(\"file\"));\n            /*axios.post('http://localhost:7000/api/addContact',{\n                name:fields[\"name\"],\n                phno:fields[\"phno\"],\n                email:fields[\"email\"],\n                image:this.state.fileToUpload\n            }); */\n\n            axios.post('http://localhost:7000/addContact',formData,{\n            }).then((res)=>{\n                console.log(res.data);\n                if(res.data.success)\n                {\n                    alert(\"Contact saved successfully\");\n                    window.location.replace(\"/\");\n                }\n                else{\n                    alert(\"You already have a contact with that name/phone number\");\n                    window.location.replace(\"/\");\n                }\n            });\n            //let fields={};\n            fields[\"name\"]=\"\";\n            fields[\"phno\"]=\"\";\n            fields[\"email\"]=\"\";\n            this.setState({fields:fields});\n        }\n        event.preventDefault();\n    };\n\n    validateAddContactForm(){\n        let fields=this.state.fields;\n        let errors={};\n        let formIsValid=true;\n\n        if(!fields[\"name\"])\n        {\n            formIsValid=false;\n            errors[\"name\"]=\"Please provide contact name\";\n        }\n        if(!fields[\"phno\"])\n        {\n            formIsValid=false;\n            errors[\"phno\"]=\"Please provide contact number\";\n        }\n        if(typeof fields[\"phno\"]!==\"undefined\")\n        {\n            if(!/^[0-9]{10}$/.test(fields[\"phno\"]))\n            {\n                formIsValid=false;\n                errors[\"phno\"]=\"Please provide valid contact number\";\n                fields[\"phno\"]=\"\";\n            }\n        }\n        /*if(typeof fields[\"email\"]!==\"undefined\")\n        {\n            if(!fields[\"email\"].match(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+.([A-Za-z]{2,4})$/))\n            {\n                formIsValid=false;\n                errors[\"email\"]=\"Please provide valid email id or leave it empty\";\n                fields[\"email\"]=\"\";\n            }\n        }*/\n        this.setState({errors});\n        return formIsValid;\n    };\n\n    uploadImage(event){\n        this.setState({filePreview:URL.createObjectURL(event.target.files[0])},()=>\n        {\n            console.log(\"Selected File:\",this.state.filePreview);\n        });\n        this.setState({fileToUpload:event.target.files[0]},()=>{\n            console.log(\"File to upload:\",this.state.fileToUpload);\n        })\n        /*let file=event.target.files[0];\n        var reader= new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend=()=>{\n            this.setState({base64:reader.result},()=>{\n                console.log(\"base64 image:\",this.state.base64);\n            });\n        }*/\n       /* axios.post('http://localhost:7000/api/uploadPhoto',formData,{}); */\n        event.preventDefault();\n    };\n\n    render(){\n    return (\n    <Form onSubmit={this.handleSaveAddContact} onReset={this.handleCancelAddContact} noValidate encType=\"multipart/form-data\" autoComplete=\"off\">\n        <Form.Group>\n        <Card>\n            <Card.Img variant=\"top\" src={this.state.filePreview || \"background.png\"} className=\"avatar-background\" alt=\"default image\" title=\"Display Picture\"/>\n        </Card>\n        </Form.Group>\n       {/* <Card.ImgOverlay className=\"align-center text-center\"> */}\n        <Form.Group>\n            <Form.Label className=\"btn button btn-block btn-primary\" htmlFor=\"upload\" title=\"Choose Picture\"> \n                <input id=\"upload\" name=\"file\" type=\"file\" accept=\"image/*\" className=\"d-none\" onChange={this.uploadImage}/><FaUpload/>&nbsp;Choose Picture\n            </Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Name\" className=\"styled-control\" value={this.state.fields.name} id=\"name\" name=\"name\" onChange={this.handleChange} maxLength=\"25\" title=\"Contact Name\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.name}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Phone Number\" className=\"styled-control\" value={this.state.fields.phno} id=\"phno\" name=\"phno\" onChange={this.handleChange} maxLength=\"10\" title=\"Contact Number\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.phno}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter Email\" className=\"styled-control\" value={this.state.fields.email} id=\"email\" name=\"email\" onChange={this.handleChange} title=\"Contact Email ID\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.email}</Form.Label>\n        </Form.Group>\n       <Button variant=\"primary\" className=\"button\" type=\"reset\" style={{float:'left'}} title=\"Cancel Save\"><FaTimes></FaTimes>&nbsp;Cancel</Button>\n        <Button variant=\"primary\" className=\"button\" type=\"submit\" style={{float:'right'}} title=\"Save Contact\"><FaCheck></FaCheck>&nbsp;Save</Button> \n    </Form>\n    )}\n}\n\nexport default AddContact;\n","import React from 'react';\nimport axios from 'axios';\nimport {Card,Form,Button} from 'react-bootstrap';\nimport {FaCheck,FaTimes,FaUpload} from 'react-icons/fa'\n\nclass EditContact extends React.Component {\n    render() {\n    return (\n        <Card style={{ width: '450px' , height: 'auto',borderRadius:'6px'}} id=\"editCardId\">\n        <Card.Body>\n                <EditCardForm name={this.props.name} phno={this.props.phno} email={this.props.email} image={this.props.image}/>\n        </Card.Body>\n    </Card>\n    )}\n};\n\nclass EditCardForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={fileToUpdate:null,filePreview:null,\n            fields:{name:this.props.name,phno:this.props.phno,email:this.props.email},\n            errors:{name:\"\",phno:\"\",email:\"\"}\n        };\n        this.handleCancel=this.handleCancel.bind(this);\n        this.handleSave=this.handleSave.bind(this);\n        this.updateImage=this.updateImage.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n    };\n    /*componentDidMount()\n    {\n        const {name,phno,email}=this.props;\n        document.getElementById(\"name\").value=name;\n        document.getElementById(\"phno\").value=phno;\n        document.getElementById(\"email\").value=email;\n    } */\n    handleChange(event){\n        let fields=this.state.fields;\n        const nameReg=/^[A-Za-z ]{1,25}$/;\n        const phnoReg=/^[0-9]{1,10}$/;\n        if(event.target.name===\"name\")\n        {\n            if(event.target.value==='' || nameReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"phno\")\n        {\n            if(event.target.value==='' || phnoReg.test(event.target.value))\n            {\n                fields[event.target.name]=event.target.value;\n            }\n        }\n        if(event.target.name===\"email\")\n        {\n            fields[event.target.name]=event.target.value;\n        }\n        \n        this.setState({fields});\n        event.preventDefault();\n    };\n\n    handleCancel(event){\n        event.preventDefault();\n        //document.getElementById(\"editCardId\").style.display=\"none\";\n       window.location.replace(\"/\");\n        //ReactDOM.render(<App/>,document.getElementById('root'));\n    };\n\n    handleSave(event){\n        event.preventDefault();\n        //console.log(\"Display value:\",this.props)\n        if(this.validateEditContactForm())\n        {\n            console.log(\"Original Values:\",this.props);\n            console.log(\"Edited Values:\",this.state.fields,this.state.fileToUpdate);\n            let fields=this.state.fields;\n            const fd=new FormData();\n            fd.append(\"file\",this.state.fileToUpdate);\n            fd.append(\"name\",fields[\"name\"]);\n            fd.append(\"phno\",fields[\"phno\"]);\n            fd.append(\"email\",fields[\"email\"]);\n            fd.append(\"previousName\",this.props.name);\n            fd.append(\"previousPhno\",this.props.phno);\n            fd.append(\"previousEmail\",this.props.email);\n            fd.append(\"previousImage\",this.props.image);\n            //console.log(\"update picture:\",fd.get(\"file\"));\n            axios.post('http://localhost:7000/updateContact',fd,{})\n            .then((res)=>{\n                if(res.data.success)\n                {\n                    alert(\"Contact updated successfully\");\n                    window.location.replace(\"/\");\n                }\n                else{\n                    alert(\"Contact update failed\");\n                    window.location.replace(\"/\");\n                }\n            })\n        }\n    };\n\n    validateEditContactForm(){\n        let fields=this.state.fields;\n        let errors={};\n        let formIsValid=true;\n        if(!fields[\"name\"])\n        {\n            formIsValid=false;\n            errors[\"name\"]=\"Please provide contact name\";\n        }\n        if(!fields[\"phno\"])\n        {\n            formIsValid=false;\n            errors[\"phno\"]=\"Please provide contact number\";\n        }\n        if(typeof fields[\"phno\"]!==\"undefined\")\n        {\n            if(!/^[0-9]{10}$/.test(fields[\"phno\"]))\n            {\n                formIsValid=false;\n                errors[\"phno\"]=\"Please provide valid contact number\";\n                //fields[\"phno\"]=\"\";\n            }\n        }\n        /*if(typeof fields[\"email\"]!==\"undefined\")\n        {\n            if(!fields[\"email\"].match(/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+.([A-Za-z]{2,4})$/))\n            {\n                formIsValid=false;\n                errors[\"email\"]=\"Please provide valid email id or leave it empty\";\n                //fields[\"email\"]=\"\";\n            }\n        }*/\n        this.setState({errors});\n        return formIsValid;\n    };\n\n    updateImage(event){\n        this.setState({fileToUpdate:event.target.files[0]},()=>{\n            console.log(\"File to update:\",this.state.fileToUpdate);\n        })\n        this.setState({filePreview:URL.createObjectURL(event.target.files[0])},()=>{\n            console.log(\"File to update preview:\",this.state.filePreview);\n            document.getElementById(\"image\").src=this.state.filePreview;\n        })\n    };\n\n    render(){\n    return (\n        <Form onSubmit={this.handleSave} onReset={this.handleCancel} noValidate encType=\"multipart/form-data\" autoComplete=\"off\">\n            <Form.Group>\n        <Card >\n            <Card.Img variant=\"top\" id=\"image\" src= {this.props.image || \"user1.png\"} className=\"avatar-background\" alt=\"default image\" title=\"Display Picture\"/>\n        </Card>\n        </Form.Group>\n       {/* <Card.ImgOverlay className=\"align-center text-center\"> */}\n            <Form.Group>\n               <Form.Label className=\"btn btn-primary btn-block button\" htmlFor=\"update\" title=\"Change Picture\"> \n                    <Form.Control id=\"update\" name=\"update\" type=\"file\" accept=\"image/*\" className=\"d-none\" onChange={this.updateImage}/><FaUpload/>&nbsp;Change Picture\n                    </Form.Label>\n            </Form.Group>\n            <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter Name\" className=\"styled-control\" value={this.state.fields.name}  onChange={this.handleChange} title=\"Contact Name\" maxLength=\"25\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.name}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control type=\"text\" name=\"phno\" placeholder=\"Enter Phone No\" className=\"styled-control\" value={this.state.fields.phno} onChange={this.handleChange} maxLength=\"10\" title=\"Contact Number\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.phno}</Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter Email\" className=\"styled-control\" value={this.state.fields.email} onChange={this.handleChange} title=\"Contact Email ID\"/>\n            <Form.Label className=\"error-label\">{this.state.errors.email}</Form.Label>\n        </Form.Group>\n        <Button variant=\"primary\" className=\"button\" type=\"reset\" style={{float:'left'}} title=\"Cancel Changes\"><FaTimes></FaTimes>&nbsp;Cancel</Button> \n        <Button variant=\"primary\" className=\"button\" type=\"submit\" style={{float:'right'}} title=\"Save Changes\"><FaCheck></FaCheck>&nbsp;Save</Button> \n        \n    </Form>\n    )}\n};\n\nexport default EditContact;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Card,Button,Form} from 'react-bootstrap';\nimport {FaPen,FaTimes} from 'react-icons/fa';\nimport EditContact from './editContact';\n\nclass ViewContact extends React.Component {\n    render() {\n    return (\n    <Card style={{ width: '450px' , height: 'auto',borderRadius:'6px'}} id=\"viewCardId\">\n        <Card.Body>\n                <ViewCardForm phno={this.props.phno} email={this.props.email} name={this.props.name} image={this.props.image}/>\n        </Card.Body>\n    </Card>\n    )}\n};\n\nclass ViewCardForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleEdit=this.handleEdit.bind(this);\n        this.handleEditCancel=this.handleEditCancel.bind(this);\n    };\n\n    handleEdit(event){\n        ReactDOM.render(<EditContact name={this.props.name} phno={this.props.phno} email={this.props.email} image={this.props.image}/>,\n            document.getElementById('target'));\n        event.preventDefault();\n    };\n\n    handleEditCancel(event){\n        window.location.replace(\"/\");\n        //ReactDOM.render(<App/>,document.getElementById('root'));\n    };\n\n    render(){\n    return (\n        <Form onSubmit={this.handleEdit} onReset={this.handleEditCancel}>\n        <Form.Group>\n        <Card>\n            <Card.Img variant=\"top\" src={this.props.image} className=\"avatar-background\" alt=\"default image\" title=\"Display Picture\"/>\n            <Card.ImgOverlay style={{color:'white'}}><span title=\"Contact Name\">{this.props.name}</span></Card.ImgOverlay>\n        </Card>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control className=\"styled-control\" value={this.props.name} plaintext=\"true\" readOnly={true} title=\"Contact Name\"/>\n            <Form.Label></Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control className=\"styled-control\" value={this.props.phno} plaintext=\"true\" readOnly={true} title=\"Contact Number\"/>\n            <Form.Label></Form.Label>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control className=\"styled-control\" value={this.props.email} plaintext=\"true\" readOnly={true} title=\"Contact Email ID\"/>\n            <Form.Label></Form.Label>\n        </Form.Group>\n        <Button variant=\"primary\" className=\"button\" type=\"reset\" style={{float:'left'}} title=\"Close\"><FaTimes></FaTimes>&nbsp;Cancel</Button>\n        <Button variant=\"primary\" className=\"button\"  type=\"submit\" style={{float:'right'}} title=\"Edit Contact\"><FaPen></FaPen>&nbsp;Edit</Button>\n    </Form>  \n    );}\n}\n\nexport default ViewContact;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ViewContact from './viewContact';\nimport {ListGroup,Image,Form,Row,Col} from 'react-bootstrap';\nimport axios from 'axios';\n\n\nclass ContactList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={data:[],items:[],noResult:\"\",totalContacts:0,noContacts:\"\"};\n        this.searchHandler=this.searchHandler.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:7000/contactList')\n          .then((res) => {res.data.data.sort(function(a,b){\n              return (a.name>b.name)-(a.name<b.name)\n          })\n              this.setState({ data: res.data.data});\n              this.setState({items:this.state.data});\n              this.setState({totalContacts:res.data.data.length});\n              if(this.state.data.length===0)\n              {\n                this.setState({noContacts:\"No contacts to show\"})\n              }\n          console.log(\"items:\",this.state.items)})\n      };\n      searchHandler(event){\n        var searchResult=this.state.data;\n        //console.log(\"Search Result:\",searchResult);\n        searchResult=searchResult.filter(function(item){\n            return item.name.toLowerCase().search(event.target.value.toLowerCase())!==-1;\n        })\n        if(searchResult.length===0)\n        {\n            this.setState({noResult:\"No results found\"})\n        }\n        else{\n            this.setState({noResult:\"\"})\n        }\n        this.setState({items:searchResult});\n      }\n    render() {\n    return (\n        <div style={{position:'relative'}} >\n            <Form.Group as={Row}  id=\"search\">\n                <Col md={4}><span>Total: {this.state.totalContacts+\" contacts\"}</span></Col>\n                <Col md={8}>\n                    <Form.Control type=\"text\" placeholder=\"Search Contact\" className=\"styledControl search-button\" title=\"Search Contact\" onChange={this.searchHandler}/>\n                </Col>\n            </Form.Group>\n            <Form.Group as={Row}>\n                <Col md={12}>\n                <ListGroup variant=\"flush\" id=\"scrollable\">{this.state.items.map((user,index)=>(\n                <ListGroup.Item variant=\"primary\" action className=\"borderless\" key={index} onClick={(event)=>{\n                ReactDOM.render(\n                <ViewContact name={user.name} phno={user.phno} email={user.email} image={user.image.replace('public/','http://localhost:7000/')}/>,document.getElementById('target'));\n                console.log(\"Onclick:\",user.name,user.phno,user.email)}}>\n                <Image src={user.image.replace('public/','http://localhost:7000/')} alt=\"user\" style={{borderRadius:'50%',width:'40px',height:'40px'}}></Image>\n                <span>{user.name}</span></ListGroup.Item>))}\n                </ListGroup>\n                <span className=\"align-center text-center\">{this.state.noResult}</span>\n                <span className=\"align-center text-center\">{this.state.noContacts}</span>\n                </Col>\n            </Form.Group>\n        </div>\n    );\n  }\n}\nexport default ContactList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddContact from './addContact';\nimport ContactList from './contactList';\nimport {Container,Row,Col,Form, Button} from 'react-bootstrap';\nimport {FaPlus} from 'react-icons/fa';\nimport { resolve } from 'q';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={loading:true}\n  };\n\n  componentDidMount(){\n    callPageLoader().then(()=>{this.setState({loading:false})});\n  };\n\n  render(){\n    const {loading}=this.state;\n    if(loading){\n      return null;\n    }\n  return (\n  <Container fluid>\n    <Row>\n      <Col md={5} lg={5} xl={5}>\n        <ContactList></ContactList>\n  </Col> \n      <Col md={{span:7}} lg={{span:5,offset:2}} xl={{span:5,offset:2}}  id=\"target\"><AddButton/>\n      </Col>\n      </Row>      \n  </Container>\n  )};\n};\n\nfunction callPageLoader(){\n  return new Promise((resolve) => setTimeout(() => resolve(), 250));\n}\n\nclass AddButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n  handleSubmit(event){\n    ReactDOM.render(<AddContact/>,document.getElementById('target'));\n    //document.getElementById(\"addBtn\").style.display=\"none\";\n    event.preventDefault();\n  }\n  render(){\n  return (\n      <Form onSubmit={this.handleSubmit} id=\"addBtn\">\n    <Button type=\"submit\" size=\"lg\" variant=\"light\" className=\"add-button\" title=\"Add New Contact\">\n      <FaPlus/></Button>\n    </Form>\n    \n  )}\n};\n\nexport  default App;\n","import React from 'react';\nimport {Navbar} from 'react-bootstrap';\nfunction Header() {\n  return (\n    <NavBar></NavBar>\n  )\n}\n\nfunction NavBar() {\n  return (\n  <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n    <NavBarBrand></NavBarBrand>\n  </Navbar>\n  )\n}\nfunction NavBarBrand(){\n  return (\n    <Navbar.Brand href=\"#home\">Address Book</Navbar.Brand>\n  )\n}\n\n\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Header from './Header';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Header />,document.getElementById('header'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}